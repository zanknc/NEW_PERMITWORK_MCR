'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SAFETY")>  _
Partial Public Class DBELECTRICALDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSAFETY_ELECTRICAL_TEST(instance As SAFETY_ELECTRICAL_TEST)
    End Sub
  Partial Private Sub UpdateSAFETY_ELECTRICAL_TEST(instance As SAFETY_ELECTRICAL_TEST)
    End Sub
  Partial Private Sub DeleteSAFETY_ELECTRICAL_TEST(instance As SAFETY_ELECTRICAL_TEST)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SAFETYConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property SAFETY_APPROVEEMAIL_ELECTRICALs() As System.Data.Linq.Table(Of SAFETY_APPROVEEMAIL_ELECTRICAL)
		Get
			Return Me.GetTable(Of SAFETY_APPROVEEMAIL_ELECTRICAL)
		End Get
	End Property
	
	Public ReadOnly Property SAFETY_ELECTRICAL_TESTs() As System.Data.Linq.Table(Of SAFETY_ELECTRICAL_TEST)
		Get
			Return Me.GetTable(Of SAFETY_ELECTRICAL_TEST)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAFETY_APPROVEEMAIL_ELECTRICAL")>  _
Partial Public Class SAFETY_APPROVEEMAIL_ELECTRICAL
	
	Private _SAFETYID As Integer
	
	Private _SAFETYCODE As String
	
	Private _SAFETYTITLENAME As String
	
	Private _SAFETYNAMETH As String
	
	Private _SAFETYNAME As String
	
	Private _SAFETYEMAIL As String
	
	Private _SAFETYEDETAIL As String
	
	Private _SAFETYEDATE As System.Nullable(Of Date)
	
	Private _SAFETYEIPADDRESS As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYID", DbType:="Int NOT NULL")>  _
	Public Property SAFETYID() As Integer
		Get
			Return Me._SAFETYID
		End Get
		Set
			If ((Me._SAFETYID = value)  _
						= false) Then
				Me._SAFETYID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYCODE", DbType:="Char(20)")>  _
	Public Property SAFETYCODE() As String
		Get
			Return Me._SAFETYCODE
		End Get
		Set
			If (String.Equals(Me._SAFETYCODE, value) = false) Then
				Me._SAFETYCODE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYTITLENAME", DbType:="VarChar(20)")>  _
	Public Property SAFETYTITLENAME() As String
		Get
			Return Me._SAFETYTITLENAME
		End Get
		Set
			If (String.Equals(Me._SAFETYTITLENAME, value) = false) Then
				Me._SAFETYTITLENAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYNAMETH", DbType:="VarChar(50)")>  _
	Public Property SAFETYNAMETH() As String
		Get
			Return Me._SAFETYNAMETH
		End Get
		Set
			If (String.Equals(Me._SAFETYNAMETH, value) = false) Then
				Me._SAFETYNAMETH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYNAME", DbType:="VarChar(50)")>  _
	Public Property SAFETYNAME() As String
		Get
			Return Me._SAFETYNAME
		End Get
		Set
			If (String.Equals(Me._SAFETYNAME, value) = false) Then
				Me._SAFETYNAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYEMAIL", DbType:="VarChar(50)")>  _
	Public Property SAFETYEMAIL() As String
		Get
			Return Me._SAFETYEMAIL
		End Get
		Set
			If (String.Equals(Me._SAFETYEMAIL, value) = false) Then
				Me._SAFETYEMAIL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYEDETAIL", DbType:="VarChar(250)")>  _
	Public Property SAFETYEDETAIL() As String
		Get
			Return Me._SAFETYEDETAIL
		End Get
		Set
			If (String.Equals(Me._SAFETYEDETAIL, value) = false) Then
				Me._SAFETYEDETAIL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYEDATE", DbType:="DateTime")>  _
	Public Property SAFETYEDATE() As System.Nullable(Of Date)
		Get
			Return Me._SAFETYEDATE
		End Get
		Set
			If (Me._SAFETYEDATE.Equals(value) = false) Then
				Me._SAFETYEDATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYEIPADDRESS", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property SAFETYEIPADDRESS() As String
		Get
			Return Me._SAFETYEIPADDRESS
		End Get
		Set
			If (String.Equals(Me._SAFETYEIPADDRESS, value) = false) Then
				Me._SAFETYEIPADDRESS = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAFETY_ELECTRICAL_TEST")>  _
Partial Public Class SAFETY_ELECTRICAL_TEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SCNO As String
	
	Private _SCYEAR As String
	
	Private _SCNAMETITLE As String
	
	Private _SCNAME As String
	
	Private _SCREQNAME As String
	
	Private _SCTELMOBILE As String
	
	Private _SCTELCOMPANY As String
	
	Private _SCPERMITSESS As String
	
	Private _SCPERMITNAME1 As String
	
	Private _SCPERMITNAME2 As String
	
	Private _SCPERMITNAME3 As String
	
	Private _SCPERMITNAME4 As String
	
	Private _SCPERMITNAME5 As String
	
	Private _SCPERMITNAME6 As String
	
	Private _SCPERMITNAME7 As String
	
	Private _SCWORKDIV As String
	
	Private _SCWORKDETAIL As String
	
	Private _SCWORKAREA As String
	
	Private _SCFLOOR As String
	
	Private _SCWORKOTHER As String
	
	Private _SCDIVNAME As String
	
	Private _SCSECTNAME As String
	
	Private _SCVOLTE As String
	
	Private _SCNAMECONTROL As String
	
	Private _SCEMAILCONTROL As String
	
	Private _SCSTAMPCONTROL As String
	
	Private _SCCONTROLAPRDATE As System.Nullable(Of Date)
	
	Private _SCWORKDATE As System.Nullable(Of Date)
	
	Private _SCWORKDATEFROM As String
	
	Private _SCWORKDATETO As String
	
	Private _SCCOMPANY As String
	
	Private _SCPERMITWORKNAMETITLE As String
	
	Private _SCPERMITWORKNAME As String
	
	Private _SCPERMITWORKSUM As String
	
	Private _SCEQUIPMENT1 As String
	
	Private _SCEQUIPMENT1CHECK As System.Nullable(Of Boolean)
	
	Private _SCEQUIPMENT2 As String
	
	Private _SCEQUIPMENT2CHECK As System.Nullable(Of Boolean)
	
	Private _SCEQUIPMENT3 As String
	
	Private _SCEQUIPMENT3CHECK As System.Nullable(Of Boolean)
	
	Private _SCEQUIPMENT4 As String
	
	Private _SCEQUIPMENT4CHECK As System.Nullable(Of Boolean)
	
	Private _SCEQUIPMENT5 As String
	
	Private _SCEQUIPMENT5CHECK As System.Nullable(Of Boolean)
	
	Private _SCEQUIPMENT6 As String
	
	Private _SCEQUIPMENT6CHECK As System.Nullable(Of Boolean)
	
	Private _SCTITLEAPPNAME As String
	
	Private _SCAPPNAME As String
	
	Private _SCHOSTAPRDATE As System.Nullable(Of Date)
	
	Private _SCEMAILAPPNAME As String
	
	Private _SCCREATEDATE As System.Nullable(Of Date)
	
	Private _SCTITLESAFETYNAME As String
	
	Private _SCSAFETYNAME As String
	
	Private _SCSAFETYEMAILNAME As String
	
	Private _SCSAFETYDATE As System.Nullable(Of Date)
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _SCSCQ As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSCNOChanging(value As String)
    End Sub
    Partial Private Sub OnSCNOChanged()
    End Sub
    Partial Private Sub OnSCYEARChanging(value As String)
    End Sub
    Partial Private Sub OnSCYEARChanged()
    End Sub
    Partial Private Sub OnSCNAMETITLEChanging(value As String)
    End Sub
    Partial Private Sub OnSCNAMETITLEChanged()
    End Sub
    Partial Private Sub OnSCNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCNAMEChanged()
    End Sub
    Partial Private Sub OnSCREQNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCREQNAMEChanged()
    End Sub
    Partial Private Sub OnSCTELMOBILEChanging(value As String)
    End Sub
    Partial Private Sub OnSCTELMOBILEChanged()
    End Sub
    Partial Private Sub OnSCTELCOMPANYChanging(value As String)
    End Sub
    Partial Private Sub OnSCTELCOMPANYChanged()
    End Sub
    Partial Private Sub OnSCPERMITSESSChanging(value As String)
    End Sub
    Partial Private Sub OnSCPERMITSESSChanged()
    End Sub
    Partial Private Sub OnSCPERMITNAME1Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME1Changed()
    End Sub
    Partial Private Sub OnSCPERMITNAME2Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME2Changed()
    End Sub
    Partial Private Sub OnSCPERMITNAME3Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME3Changed()
    End Sub
    Partial Private Sub OnSCPERMITNAME4Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME4Changed()
    End Sub
    Partial Private Sub OnSCPERMITNAME5Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME5Changed()
    End Sub
    Partial Private Sub OnSCPERMITNAME6Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME6Changed()
    End Sub
    Partial Private Sub OnSCPERMITNAME7Changing(value As String)
    End Sub
    Partial Private Sub OnSCPERMITNAME7Changed()
    End Sub
    Partial Private Sub OnSCWORKDIVChanging(value As String)
    End Sub
    Partial Private Sub OnSCWORKDIVChanged()
    End Sub
    Partial Private Sub OnSCWORKDETAILChanging(value As String)
    End Sub
    Partial Private Sub OnSCWORKDETAILChanged()
    End Sub
    Partial Private Sub OnSCWORKAREAChanging(value As String)
    End Sub
    Partial Private Sub OnSCWORKAREAChanged()
    End Sub
    Partial Private Sub OnSCFLOORChanging(value As String)
    End Sub
    Partial Private Sub OnSCFLOORChanged()
    End Sub
    Partial Private Sub OnSCWORKOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnSCWORKOTHERChanged()
    End Sub
    Partial Private Sub OnSCDIVNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCDIVNAMEChanged()
    End Sub
    Partial Private Sub OnSCSECTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCSECTNAMEChanged()
    End Sub
    Partial Private Sub OnSCVOLTEChanging(value As String)
    End Sub
    Partial Private Sub OnSCVOLTEChanged()
    End Sub
    Partial Private Sub OnSCNAMECONTROLChanging(value As String)
    End Sub
    Partial Private Sub OnSCNAMECONTROLChanged()
    End Sub
    Partial Private Sub OnSCEMAILCONTROLChanging(value As String)
    End Sub
    Partial Private Sub OnSCEMAILCONTROLChanged()
    End Sub
    Partial Private Sub OnSCSTAMPCONTROLChanging(value As String)
    End Sub
    Partial Private Sub OnSCSTAMPCONTROLChanged()
    End Sub
    Partial Private Sub OnSCCONTROLAPRDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSCCONTROLAPRDATEChanged()
    End Sub
    Partial Private Sub OnSCWORKDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSCWORKDATEChanged()
    End Sub
    Partial Private Sub OnSCWORKDATEFROMChanging(value As String)
    End Sub
    Partial Private Sub OnSCWORKDATEFROMChanged()
    End Sub
    Partial Private Sub OnSCWORKDATETOChanging(value As String)
    End Sub
    Partial Private Sub OnSCWORKDATETOChanged()
    End Sub
    Partial Private Sub OnSCCOMPANYChanging(value As String)
    End Sub
    Partial Private Sub OnSCCOMPANYChanged()
    End Sub
    Partial Private Sub OnSCPERMITWORKNAMETITLEChanging(value As String)
    End Sub
    Partial Private Sub OnSCPERMITWORKNAMETITLEChanged()
    End Sub
    Partial Private Sub OnSCPERMITWORKNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCPERMITWORKNAMEChanged()
    End Sub
    Partial Private Sub OnSCPERMITWORKSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSCPERMITWORKSUMChanged()
    End Sub
    Partial Private Sub OnSCEQUIPMENT1Changing(value As String)
    End Sub
    Partial Private Sub OnSCEQUIPMENT1Changed()
    End Sub
    Partial Private Sub OnSCEQUIPMENT1CHECKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSCEQUIPMENT1CHECKChanged()
    End Sub
    Partial Private Sub OnSCEQUIPMENT2Changing(value As String)
    End Sub
    Partial Private Sub OnSCEQUIPMENT2Changed()
    End Sub
    Partial Private Sub OnSCEQUIPMENT2CHECKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSCEQUIPMENT2CHECKChanged()
    End Sub
    Partial Private Sub OnSCEQUIPMENT3Changing(value As String)
    End Sub
    Partial Private Sub OnSCEQUIPMENT3Changed()
    End Sub
    Partial Private Sub OnSCEQUIPMENT3CHECKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSCEQUIPMENT3CHECKChanged()
    End Sub
    Partial Private Sub OnSCEQUIPMENT4Changing(value As String)
    End Sub
    Partial Private Sub OnSCEQUIPMENT4Changed()
    End Sub
    Partial Private Sub OnSCEQUIPMENT4CHECKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSCEQUIPMENT4CHECKChanged()
    End Sub
    Partial Private Sub OnSCEQUIPMENT5Changing(value As String)
    End Sub
    Partial Private Sub OnSCEQUIPMENT5Changed()
    End Sub
    Partial Private Sub OnSCEQUIPMENT5CHECKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSCEQUIPMENT5CHECKChanged()
    End Sub
    Partial Private Sub OnSCEQUIPMENT6Changing(value As String)
    End Sub
    Partial Private Sub OnSCEQUIPMENT6Changed()
    End Sub
    Partial Private Sub OnSCEQUIPMENT6CHECKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSCEQUIPMENT6CHECKChanged()
    End Sub
    Partial Private Sub OnSCTITLEAPPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCTITLEAPPNAMEChanged()
    End Sub
    Partial Private Sub OnSCAPPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCAPPNAMEChanged()
    End Sub
    Partial Private Sub OnSCHOSTAPRDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSCHOSTAPRDATEChanged()
    End Sub
    Partial Private Sub OnSCEMAILAPPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCEMAILAPPNAMEChanged()
    End Sub
    Partial Private Sub OnSCCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSCCREATEDATEChanged()
    End Sub
    Partial Private Sub OnSCTITLESAFETYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCTITLESAFETYNAMEChanged()
    End Sub
    Partial Private Sub OnSCSAFETYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCSAFETYNAMEChanged()
    End Sub
    Partial Private Sub OnSCSAFETYEMAILNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCSAFETYEMAILNAMEChanged()
    End Sub
    Partial Private Sub OnSCSAFETYDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSCSAFETYDATEChanged()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnSCSCQChanging(value As Integer)
    End Sub
    Partial Private Sub OnSCSCQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCNO", DbType:="Char(20)")>  _
	Public Property SCNO() As String
		Get
			Return Me._SCNO
		End Get
		Set
			If (String.Equals(Me._SCNO, value) = false) Then
				Me.OnSCNOChanging(value)
				Me.SendPropertyChanging
				Me._SCNO = value
				Me.SendPropertyChanged("SCNO")
				Me.OnSCNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCYEAR", DbType:="Char(20)")>  _
	Public Property SCYEAR() As String
		Get
			Return Me._SCYEAR
		End Get
		Set
			If (String.Equals(Me._SCYEAR, value) = false) Then
				Me.OnSCYEARChanging(value)
				Me.SendPropertyChanging
				Me._SCYEAR = value
				Me.SendPropertyChanged("SCYEAR")
				Me.OnSCYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCNAMETITLE", DbType:="Char(10)")>  _
	Public Property SCNAMETITLE() As String
		Get
			Return Me._SCNAMETITLE
		End Get
		Set
			If (String.Equals(Me._SCNAMETITLE, value) = false) Then
				Me.OnSCNAMETITLEChanging(value)
				Me.SendPropertyChanging
				Me._SCNAMETITLE = value
				Me.SendPropertyChanged("SCNAMETITLE")
				Me.OnSCNAMETITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCNAME", DbType:="VarChar(100)")>  _
	Public Property SCNAME() As String
		Get
			Return Me._SCNAME
		End Get
		Set
			If (String.Equals(Me._SCNAME, value) = false) Then
				Me.OnSCNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCNAME = value
				Me.SendPropertyChanged("SCNAME")
				Me.OnSCNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCREQNAME", DbType:="VarChar(100)")>  _
	Public Property SCREQNAME() As String
		Get
			Return Me._SCREQNAME
		End Get
		Set
			If (String.Equals(Me._SCREQNAME, value) = false) Then
				Me.OnSCREQNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCREQNAME = value
				Me.SendPropertyChanged("SCREQNAME")
				Me.OnSCREQNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCTELMOBILE", DbType:="VarChar(10)")>  _
	Public Property SCTELMOBILE() As String
		Get
			Return Me._SCTELMOBILE
		End Get
		Set
			If (String.Equals(Me._SCTELMOBILE, value) = false) Then
				Me.OnSCTELMOBILEChanging(value)
				Me.SendPropertyChanging
				Me._SCTELMOBILE = value
				Me.SendPropertyChanged("SCTELMOBILE")
				Me.OnSCTELMOBILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCTELCOMPANY", DbType:="VarChar(10)")>  _
	Public Property SCTELCOMPANY() As String
		Get
			Return Me._SCTELCOMPANY
		End Get
		Set
			If (String.Equals(Me._SCTELCOMPANY, value) = false) Then
				Me.OnSCTELCOMPANYChanging(value)
				Me.SendPropertyChanging
				Me._SCTELCOMPANY = value
				Me.SendPropertyChanged("SCTELCOMPANY")
				Me.OnSCTELCOMPANYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITSESS", DbType:="Char(10)")>  _
	Public Property SCPERMITSESS() As String
		Get
			Return Me._SCPERMITSESS
		End Get
		Set
			If (String.Equals(Me._SCPERMITSESS, value) = false) Then
				Me.OnSCPERMITSESSChanging(value)
				Me.SendPropertyChanging
				Me._SCPERMITSESS = value
				Me.SendPropertyChanged("SCPERMITSESS")
				Me.OnSCPERMITSESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME1", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME1() As String
		Get
			Return Me._SCPERMITNAME1
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME1, value) = false) Then
				Me.OnSCPERMITNAME1Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME1 = value
				Me.SendPropertyChanged("SCPERMITNAME1")
				Me.OnSCPERMITNAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME2", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME2() As String
		Get
			Return Me._SCPERMITNAME2
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME2, value) = false) Then
				Me.OnSCPERMITNAME2Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME2 = value
				Me.SendPropertyChanged("SCPERMITNAME2")
				Me.OnSCPERMITNAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME3", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME3() As String
		Get
			Return Me._SCPERMITNAME3
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME3, value) = false) Then
				Me.OnSCPERMITNAME3Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME3 = value
				Me.SendPropertyChanged("SCPERMITNAME3")
				Me.OnSCPERMITNAME3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME4", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME4() As String
		Get
			Return Me._SCPERMITNAME4
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME4, value) = false) Then
				Me.OnSCPERMITNAME4Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME4 = value
				Me.SendPropertyChanged("SCPERMITNAME4")
				Me.OnSCPERMITNAME4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME5", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME5() As String
		Get
			Return Me._SCPERMITNAME5
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME5, value) = false) Then
				Me.OnSCPERMITNAME5Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME5 = value
				Me.SendPropertyChanged("SCPERMITNAME5")
				Me.OnSCPERMITNAME5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME6", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME6() As String
		Get
			Return Me._SCPERMITNAME6
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME6, value) = false) Then
				Me.OnSCPERMITNAME6Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME6 = value
				Me.SendPropertyChanged("SCPERMITNAME6")
				Me.OnSCPERMITNAME6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITNAME7", DbType:="VarChar(50)")>  _
	Public Property SCPERMITNAME7() As String
		Get
			Return Me._SCPERMITNAME7
		End Get
		Set
			If (String.Equals(Me._SCPERMITNAME7, value) = false) Then
				Me.OnSCPERMITNAME7Changing(value)
				Me.SendPropertyChanging
				Me._SCPERMITNAME7 = value
				Me.SendPropertyChanged("SCPERMITNAME7")
				Me.OnSCPERMITNAME7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKDIV", DbType:="VarChar(50)")>  _
	Public Property SCWORKDIV() As String
		Get
			Return Me._SCWORKDIV
		End Get
		Set
			If (String.Equals(Me._SCWORKDIV, value) = false) Then
				Me.OnSCWORKDIVChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKDIV = value
				Me.SendPropertyChanged("SCWORKDIV")
				Me.OnSCWORKDIVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKDETAIL", DbType:="VarChar(200)")>  _
	Public Property SCWORKDETAIL() As String
		Get
			Return Me._SCWORKDETAIL
		End Get
		Set
			If (String.Equals(Me._SCWORKDETAIL, value) = false) Then
				Me.OnSCWORKDETAILChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKDETAIL = value
				Me.SendPropertyChanged("SCWORKDETAIL")
				Me.OnSCWORKDETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKAREA", DbType:="VarChar(200)")>  _
	Public Property SCWORKAREA() As String
		Get
			Return Me._SCWORKAREA
		End Get
		Set
			If (String.Equals(Me._SCWORKAREA, value) = false) Then
				Me.OnSCWORKAREAChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKAREA = value
				Me.SendPropertyChanged("SCWORKAREA")
				Me.OnSCWORKAREAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCFLOOR", DbType:="VarChar(10)")>  _
	Public Property SCFLOOR() As String
		Get
			Return Me._SCFLOOR
		End Get
		Set
			If (String.Equals(Me._SCFLOOR, value) = false) Then
				Me.OnSCFLOORChanging(value)
				Me.SendPropertyChanging
				Me._SCFLOOR = value
				Me.SendPropertyChanged("SCFLOOR")
				Me.OnSCFLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKOTHER", DbType:="VarChar(200)")>  _
	Public Property SCWORKOTHER() As String
		Get
			Return Me._SCWORKOTHER
		End Get
		Set
			If (String.Equals(Me._SCWORKOTHER, value) = false) Then
				Me.OnSCWORKOTHERChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKOTHER = value
				Me.SendPropertyChanged("SCWORKOTHER")
				Me.OnSCWORKOTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCDIVNAME", DbType:="VarChar(100)")>  _
	Public Property SCDIVNAME() As String
		Get
			Return Me._SCDIVNAME
		End Get
		Set
			If (String.Equals(Me._SCDIVNAME, value) = false) Then
				Me.OnSCDIVNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCDIVNAME = value
				Me.SendPropertyChanged("SCDIVNAME")
				Me.OnSCDIVNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCSECTNAME", DbType:="VarChar(100)")>  _
	Public Property SCSECTNAME() As String
		Get
			Return Me._SCSECTNAME
		End Get
		Set
			If (String.Equals(Me._SCSECTNAME, value) = false) Then
				Me.OnSCSECTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCSECTNAME = value
				Me.SendPropertyChanged("SCSECTNAME")
				Me.OnSCSECTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCVOLTE", DbType:="VarChar(20)")>  _
	Public Property SCVOLTE() As String
		Get
			Return Me._SCVOLTE
		End Get
		Set
			If (String.Equals(Me._SCVOLTE, value) = false) Then
				Me.OnSCVOLTEChanging(value)
				Me.SendPropertyChanging
				Me._SCVOLTE = value
				Me.SendPropertyChanged("SCVOLTE")
				Me.OnSCVOLTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCNAMECONTROL", DbType:="VarChar(100)")>  _
	Public Property SCNAMECONTROL() As String
		Get
			Return Me._SCNAMECONTROL
		End Get
		Set
			If (String.Equals(Me._SCNAMECONTROL, value) = false) Then
				Me.OnSCNAMECONTROLChanging(value)
				Me.SendPropertyChanging
				Me._SCNAMECONTROL = value
				Me.SendPropertyChanged("SCNAMECONTROL")
				Me.OnSCNAMECONTROLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEMAILCONTROL", DbType:="VarChar(100)")>  _
	Public Property SCEMAILCONTROL() As String
		Get
			Return Me._SCEMAILCONTROL
		End Get
		Set
			If (String.Equals(Me._SCEMAILCONTROL, value) = false) Then
				Me.OnSCEMAILCONTROLChanging(value)
				Me.SendPropertyChanging
				Me._SCEMAILCONTROL = value
				Me.SendPropertyChanged("SCEMAILCONTROL")
				Me.OnSCEMAILCONTROLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCSTAMPCONTROL", DbType:="VarChar(50)")>  _
	Public Property SCSTAMPCONTROL() As String
		Get
			Return Me._SCSTAMPCONTROL
		End Get
		Set
			If (String.Equals(Me._SCSTAMPCONTROL, value) = false) Then
				Me.OnSCSTAMPCONTROLChanging(value)
				Me.SendPropertyChanging
				Me._SCSTAMPCONTROL = value
				Me.SendPropertyChanged("SCSTAMPCONTROL")
				Me.OnSCSTAMPCONTROLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCCONTROLAPRDATE", DbType:="DateTime")>  _
	Public Property SCCONTROLAPRDATE() As System.Nullable(Of Date)
		Get
			Return Me._SCCONTROLAPRDATE
		End Get
		Set
			If (Me._SCCONTROLAPRDATE.Equals(value) = false) Then
				Me.OnSCCONTROLAPRDATEChanging(value)
				Me.SendPropertyChanging
				Me._SCCONTROLAPRDATE = value
				Me.SendPropertyChanged("SCCONTROLAPRDATE")
				Me.OnSCCONTROLAPRDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKDATE", DbType:="DateTime")>  _
	Public Property SCWORKDATE() As System.Nullable(Of Date)
		Get
			Return Me._SCWORKDATE
		End Get
		Set
			If (Me._SCWORKDATE.Equals(value) = false) Then
				Me.OnSCWORKDATEChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKDATE = value
				Me.SendPropertyChanged("SCWORKDATE")
				Me.OnSCWORKDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKDATEFROM", DbType:="VarChar(10)")>  _
	Public Property SCWORKDATEFROM() As String
		Get
			Return Me._SCWORKDATEFROM
		End Get
		Set
			If (String.Equals(Me._SCWORKDATEFROM, value) = false) Then
				Me.OnSCWORKDATEFROMChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKDATEFROM = value
				Me.SendPropertyChanged("SCWORKDATEFROM")
				Me.OnSCWORKDATEFROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCWORKDATETO", DbType:="VarChar(10)")>  _
	Public Property SCWORKDATETO() As String
		Get
			Return Me._SCWORKDATETO
		End Get
		Set
			If (String.Equals(Me._SCWORKDATETO, value) = false) Then
				Me.OnSCWORKDATETOChanging(value)
				Me.SendPropertyChanging
				Me._SCWORKDATETO = value
				Me.SendPropertyChanged("SCWORKDATETO")
				Me.OnSCWORKDATETOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCCOMPANY", DbType:="VarChar(50)")>  _
	Public Property SCCOMPANY() As String
		Get
			Return Me._SCCOMPANY
		End Get
		Set
			If (String.Equals(Me._SCCOMPANY, value) = false) Then
				Me.OnSCCOMPANYChanging(value)
				Me.SendPropertyChanging
				Me._SCCOMPANY = value
				Me.SendPropertyChanged("SCCOMPANY")
				Me.OnSCCOMPANYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITWORKNAMETITLE", DbType:="Char(10)")>  _
	Public Property SCPERMITWORKNAMETITLE() As String
		Get
			Return Me._SCPERMITWORKNAMETITLE
		End Get
		Set
			If (String.Equals(Me._SCPERMITWORKNAMETITLE, value) = false) Then
				Me.OnSCPERMITWORKNAMETITLEChanging(value)
				Me.SendPropertyChanging
				Me._SCPERMITWORKNAMETITLE = value
				Me.SendPropertyChanged("SCPERMITWORKNAMETITLE")
				Me.OnSCPERMITWORKNAMETITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITWORKNAME", DbType:="VarChar(50)")>  _
	Public Property SCPERMITWORKNAME() As String
		Get
			Return Me._SCPERMITWORKNAME
		End Get
		Set
			If (String.Equals(Me._SCPERMITWORKNAME, value) = false) Then
				Me.OnSCPERMITWORKNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCPERMITWORKNAME = value
				Me.SendPropertyChanged("SCPERMITWORKNAME")
				Me.OnSCPERMITWORKNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCPERMITWORKSUM", DbType:="Char(20)")>  _
	Public Property SCPERMITWORKSUM() As String
		Get
			Return Me._SCPERMITWORKSUM
		End Get
		Set
			If (String.Equals(Me._SCPERMITWORKSUM, value) = false) Then
				Me.OnSCPERMITWORKSUMChanging(value)
				Me.SendPropertyChanging
				Me._SCPERMITWORKSUM = value
				Me.SendPropertyChanged("SCPERMITWORKSUM")
				Me.OnSCPERMITWORKSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT1", DbType:="VarChar(100)")>  _
	Public Property SCEQUIPMENT1() As String
		Get
			Return Me._SCEQUIPMENT1
		End Get
		Set
			If (String.Equals(Me._SCEQUIPMENT1, value) = false) Then
				Me.OnSCEQUIPMENT1Changing(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT1 = value
				Me.SendPropertyChanged("SCEQUIPMENT1")
				Me.OnSCEQUIPMENT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT1CHECK", DbType:="Bit")>  _
	Public Property SCEQUIPMENT1CHECK() As System.Nullable(Of Boolean)
		Get
			Return Me._SCEQUIPMENT1CHECK
		End Get
		Set
			If (Me._SCEQUIPMENT1CHECK.Equals(value) = false) Then
				Me.OnSCEQUIPMENT1CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT1CHECK = value
				Me.SendPropertyChanged("SCEQUIPMENT1CHECK")
				Me.OnSCEQUIPMENT1CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT2", DbType:="VarChar(100)")>  _
	Public Property SCEQUIPMENT2() As String
		Get
			Return Me._SCEQUIPMENT2
		End Get
		Set
			If (String.Equals(Me._SCEQUIPMENT2, value) = false) Then
				Me.OnSCEQUIPMENT2Changing(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT2 = value
				Me.SendPropertyChanged("SCEQUIPMENT2")
				Me.OnSCEQUIPMENT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT2CHECK", DbType:="Bit")>  _
	Public Property SCEQUIPMENT2CHECK() As System.Nullable(Of Boolean)
		Get
			Return Me._SCEQUIPMENT2CHECK
		End Get
		Set
			If (Me._SCEQUIPMENT2CHECK.Equals(value) = false) Then
				Me.OnSCEQUIPMENT2CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT2CHECK = value
				Me.SendPropertyChanged("SCEQUIPMENT2CHECK")
				Me.OnSCEQUIPMENT2CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT3", DbType:="VarChar(100)")>  _
	Public Property SCEQUIPMENT3() As String
		Get
			Return Me._SCEQUIPMENT3
		End Get
		Set
			If (String.Equals(Me._SCEQUIPMENT3, value) = false) Then
				Me.OnSCEQUIPMENT3Changing(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT3 = value
				Me.SendPropertyChanged("SCEQUIPMENT3")
				Me.OnSCEQUIPMENT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT3CHECK", DbType:="Bit")>  _
	Public Property SCEQUIPMENT3CHECK() As System.Nullable(Of Boolean)
		Get
			Return Me._SCEQUIPMENT3CHECK
		End Get
		Set
			If (Me._SCEQUIPMENT3CHECK.Equals(value) = false) Then
				Me.OnSCEQUIPMENT3CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT3CHECK = value
				Me.SendPropertyChanged("SCEQUIPMENT3CHECK")
				Me.OnSCEQUIPMENT3CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT4", DbType:="VarChar(100)")>  _
	Public Property SCEQUIPMENT4() As String
		Get
			Return Me._SCEQUIPMENT4
		End Get
		Set
			If (String.Equals(Me._SCEQUIPMENT4, value) = false) Then
				Me.OnSCEQUIPMENT4Changing(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT4 = value
				Me.SendPropertyChanged("SCEQUIPMENT4")
				Me.OnSCEQUIPMENT4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT4CHECK", DbType:="Bit")>  _
	Public Property SCEQUIPMENT4CHECK() As System.Nullable(Of Boolean)
		Get
			Return Me._SCEQUIPMENT4CHECK
		End Get
		Set
			If (Me._SCEQUIPMENT4CHECK.Equals(value) = false) Then
				Me.OnSCEQUIPMENT4CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT4CHECK = value
				Me.SendPropertyChanged("SCEQUIPMENT4CHECK")
				Me.OnSCEQUIPMENT4CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT5", DbType:="VarChar(100)")>  _
	Public Property SCEQUIPMENT5() As String
		Get
			Return Me._SCEQUIPMENT5
		End Get
		Set
			If (String.Equals(Me._SCEQUIPMENT5, value) = false) Then
				Me.OnSCEQUIPMENT5Changing(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT5 = value
				Me.SendPropertyChanged("SCEQUIPMENT5")
				Me.OnSCEQUIPMENT5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT5CHECK", DbType:="Bit")>  _
	Public Property SCEQUIPMENT5CHECK() As System.Nullable(Of Boolean)
		Get
			Return Me._SCEQUIPMENT5CHECK
		End Get
		Set
			If (Me._SCEQUIPMENT5CHECK.Equals(value) = false) Then
				Me.OnSCEQUIPMENT5CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT5CHECK = value
				Me.SendPropertyChanged("SCEQUIPMENT5CHECK")
				Me.OnSCEQUIPMENT5CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT6", DbType:="VarChar(100)")>  _
	Public Property SCEQUIPMENT6() As String
		Get
			Return Me._SCEQUIPMENT6
		End Get
		Set
			If (String.Equals(Me._SCEQUIPMENT6, value) = false) Then
				Me.OnSCEQUIPMENT6Changing(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT6 = value
				Me.SendPropertyChanged("SCEQUIPMENT6")
				Me.OnSCEQUIPMENT6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEQUIPMENT6CHECK", DbType:="Bit")>  _
	Public Property SCEQUIPMENT6CHECK() As System.Nullable(Of Boolean)
		Get
			Return Me._SCEQUIPMENT6CHECK
		End Get
		Set
			If (Me._SCEQUIPMENT6CHECK.Equals(value) = false) Then
				Me.OnSCEQUIPMENT6CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCEQUIPMENT6CHECK = value
				Me.SendPropertyChanged("SCEQUIPMENT6CHECK")
				Me.OnSCEQUIPMENT6CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCTITLEAPPNAME", DbType:="VarChar(20)")>  _
	Public Property SCTITLEAPPNAME() As String
		Get
			Return Me._SCTITLEAPPNAME
		End Get
		Set
			If (String.Equals(Me._SCTITLEAPPNAME, value) = false) Then
				Me.OnSCTITLEAPPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCTITLEAPPNAME = value
				Me.SendPropertyChanged("SCTITLEAPPNAME")
				Me.OnSCTITLEAPPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCAPPNAME", DbType:="VarChar(50)")>  _
	Public Property SCAPPNAME() As String
		Get
			Return Me._SCAPPNAME
		End Get
		Set
			If (String.Equals(Me._SCAPPNAME, value) = false) Then
				Me.OnSCAPPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCAPPNAME = value
				Me.SendPropertyChanged("SCAPPNAME")
				Me.OnSCAPPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCHOSTAPRDATE", DbType:="DateTime")>  _
	Public Property SCHOSTAPRDATE() As System.Nullable(Of Date)
		Get
			Return Me._SCHOSTAPRDATE
		End Get
		Set
			If (Me._SCHOSTAPRDATE.Equals(value) = false) Then
				Me.OnSCHOSTAPRDATEChanging(value)
				Me.SendPropertyChanging
				Me._SCHOSTAPRDATE = value
				Me.SendPropertyChanged("SCHOSTAPRDATE")
				Me.OnSCHOSTAPRDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCEMAILAPPNAME", DbType:="VarChar(50)")>  _
	Public Property SCEMAILAPPNAME() As String
		Get
			Return Me._SCEMAILAPPNAME
		End Get
		Set
			If (String.Equals(Me._SCEMAILAPPNAME, value) = false) Then
				Me.OnSCEMAILAPPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCEMAILAPPNAME = value
				Me.SendPropertyChanged("SCEMAILAPPNAME")
				Me.OnSCEMAILAPPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCCREATEDATE", DbType:="DateTime")>  _
	Public Property SCCREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._SCCREATEDATE
		End Get
		Set
			If (Me._SCCREATEDATE.Equals(value) = false) Then
				Me.OnSCCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._SCCREATEDATE = value
				Me.SendPropertyChanged("SCCREATEDATE")
				Me.OnSCCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCTITLESAFETYNAME", DbType:="VarChar(20)")>  _
	Public Property SCTITLESAFETYNAME() As String
		Get
			Return Me._SCTITLESAFETYNAME
		End Get
		Set
			If (String.Equals(Me._SCTITLESAFETYNAME, value) = false) Then
				Me.OnSCTITLESAFETYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCTITLESAFETYNAME = value
				Me.SendPropertyChanged("SCTITLESAFETYNAME")
				Me.OnSCTITLESAFETYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCSAFETYNAME", DbType:="VarChar(50)")>  _
	Public Property SCSAFETYNAME() As String
		Get
			Return Me._SCSAFETYNAME
		End Get
		Set
			If (String.Equals(Me._SCSAFETYNAME, value) = false) Then
				Me.OnSCSAFETYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCSAFETYNAME = value
				Me.SendPropertyChanged("SCSAFETYNAME")
				Me.OnSCSAFETYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCSAFETYEMAILNAME", DbType:="VarChar(50)")>  _
	Public Property SCSAFETYEMAILNAME() As String
		Get
			Return Me._SCSAFETYEMAILNAME
		End Get
		Set
			If (String.Equals(Me._SCSAFETYEMAILNAME, value) = false) Then
				Me.OnSCSAFETYEMAILNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCSAFETYEMAILNAME = value
				Me.SendPropertyChanged("SCSAFETYEMAILNAME")
				Me.OnSCSAFETYEMAILNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCSAFETYDATE", DbType:="DateTime")>  _
	Public Property SCSAFETYDATE() As System.Nullable(Of Date)
		Get
			Return Me._SCSAFETYDATE
		End Get
		Set
			If (Me._SCSAFETYDATE.Equals(value) = false) Then
				Me.OnSCSAFETYDATEChanging(value)
				Me.SendPropertyChanging
				Me._SCSAFETYDATE = value
				Me.SendPropertyChanged("SCSAFETYDATE")
				Me.OnSCSAFETYDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCSCQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SCSCQ() As Integer
		Get
			Return Me._SCSCQ
		End Get
		Set
			If ((Me._SCSCQ = value)  _
						= false) Then
				Me.OnSCSCQChanging(value)
				Me.SendPropertyChanging
				Me._SCSCQ = value
				Me.SendPropertyChanged("SCSCQ")
				Me.OnSCSCQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
